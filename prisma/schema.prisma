// Prisma Schema - הגדרת מבנה בסיס הנתונים
// קובץ זה מגדיר את כל הטבלאות, הקשרים והאינדקסים

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// טבלת משתמשים
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String   @map("first_name") @db.VarChar(100)
  lastName  String   @map("last_name") @db.VarChar(100)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // קשרים - משתמש יכול להיות לו ילדים וסיפורים
  children Child[]
  stories  Story[]

  @@index([email]) // אינדקס על email לחיפוש מהיר
  @@map("users") // שם הטבלה בפועל
}

// טבלת ילדים - כל משתמש יכול להיות לו כמה ילדים
model Child {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  name      String   @db.VarChar(100)
  gender    Gender
  age       Int?
  hairColor String?  @map("hair_color") @db.VarChar(50)
  eyeColor  String?  @map("eye_color") @db.VarChar(50)
  skinTone  String?  @map("skin_tone") @db.VarChar(50)
  photoUrl  String?  @map("photo_url")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // קשרים
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  stories Story[]

  @@index([userId]) // אינדקס לחיפוש ילדים של משתמש ספציפי
  @@map("children")
}

// enum למין הילד
enum Gender {
  MALE
  FEMALE
  OTHER

  @@map("gender")
}

// טבלת תבניות סיפורים
model StoryTemplate {
  id          Int     @id @default(autoincrement())
  title       String  @db.VarChar(200)
  description String? @db.Text
  category    String  @db.VarChar(100)
  ageGroup    String  @map("age_group") @db.VarChar(50) // "2-4", "5-7", "8-10"
  language    String  @default("he") @db.VarChar(10) // "he", "en"

  // גרסאות הסיפור לפי מגדר
  maleVersion   String @map("male_version") @db.Text
  femaleVersion String @map("female_version") @db.Text

  // רשימת placeholders בפורמט JSON
  placeholders Json // ["CHILD_NAME", "AGE", "HAIR_COLOR", ...]

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // קשרים
  stories Story[]

  @@index([category])
  @@index([ageGroup])
  @@index([language])
  @@map("story_templates")
}

// טבלת סיפורים שנוצרו
model Story {
  id               Int      @id @default(autoincrement())
  userId           Int      @map("user_id")
  childId          Int      @map("child_id")
  storyTemplateId  Int      @map("story_template_id")
  title            String   @db.VarChar(200)
  content          Json // התוכן הסופי עם הילד המותאם
  generatedImages  Json?    @map("generated_images") // URLs של התמונות שנוצרו
  aiPromptUsed     String?  @map("ai_prompt_used") @db.Text // הפרומפט שנשלח ל-AI
  generationStatus String   @default("pending") @map("generation_status") @db.VarChar(50) // "pending", "processing", "completed", "failed"
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  // קשרים
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  child         Child         @relation(fields: [childId], references: [id], onDelete: Cascade)
  storyTemplate StoryTemplate @relation(fields: [storyTemplateId], references: [id])

  @@index([userId])
  @@index([childId])
  @@index([generationStatus])
  @@index([createdAt])
  @@index([storyTemplateId]) // האינדקס החסר שמצאנו!
  @@map("stories")
}
